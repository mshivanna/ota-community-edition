---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: {{.kube_namespace}}
data:
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: {{.kube_namespace}}
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
{{ if .gke_nodepool }}
      nodeSelector:
        cloud.google.com/gke-nodepool: {{ .gke_nodepool }}
{{ end }}
      containers:
      - image: {{ .mysql_docker_image }}
        name: mysql
        envFrom:
        - secretRef:
            name: mysql-secret
        ports:
        - containerPort: 3306
          name: mysql
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        # readinessProbe:
        #   exec:
        #     # Check we can execute queries over TCP (skip-networking is off).
        #     command: [mysql-proot -e "SELECT 1"]
        #   initialDelaySeconds: 5
        #   periodSeconds: 2
        #   timeoutSeconds: 1
        volumeMounts:
        - name: mysql-claim-{{.kube_namespace}}
          mountPath: /var/lib/mysql
          subPath: mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-claim-{{.kube_namespace}}
      annotations:
        #volume.beta.kubernetes.io/storage-class: {{ .storage_class_name }}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .mysql_disk }}
      selector:
        matchLabels:
           app: ota
           id: ota-mysql-pv-{{.kube_namespace}}
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: {{.kube_namespace}}
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: {{ .mysql_root_password | b64enc }}
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: {{.kube_namespace}}
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
