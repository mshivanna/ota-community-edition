---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reverse-proxy-config
  namespace: {{.kube_namespace}}
data:
  reverse-proxy.conf: |-
    proxy_set_header HOST $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    server {
      server_name app.{{ .ingress_dns_name }};
      location / {
        auth_request     /auth-basic;
        proxy_set_header x-ats-namespace "default";
        proxy_set_header Authorization "";
        proxy_pass http://app/;
      }
      location = /auth-basic {
        internal;
        proxy_pass              http://oauthful/auth-basic;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
      }
    }
    server {
      server_name api.{{ .ingress_dns_name }};

      location /treehub/ {
        client_max_body_size 30M;
        auth_request     /auth-token;

        proxy_set_header x-ats-namespace "default";
        proxy_pass              http://treehub/;
      }
      location /repo/ {
        auth_request     /auth-token;
        proxy_set_header x-ats-namespace "default";
        proxy_pass              http://tuf-reposerver/;
      }

      location = /auth-token {
        internal;
        client_max_body_size 30M;  # needed for treehub auth
        proxy_pass              http://oauthful/auth-token;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
      }
    }

    server {
      server_name oauth2.{{ .ingress_dns_name }};
      location / {
        proxy_pass              http://oauthful/;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-proxy
  namespace: {{.kube_namespace}}
spec:
  selector:
    matchLabels:
      app: reverse-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: reverse-proxy
    spec:
{{ if .gke_nodepool }}
      nodeSelector:
        cloud.google.com/gke-nodepool: {{ .gke_nodepool }}
{{ end }}
      containers:
      - name: nginx
        image: {{ .nginx_docker_image }}
        ports:
        - containerPort: 80
        - containerPort: 8443
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/
      volumes:
      - name: config
        configMap:
          name: reverse-proxy-config
---
apiVersion: v1
kind: Service
metadata:
  name: reverse-proxy
  namespace: {{.kube_namespace}}
spec:
  ports:
     - name: http
       port: 80
       protocol: TCP
       targetPort: 80
     - name: https
       port: 8443
       protocol: TCP
       targetPort: 8443
  selector:
    app: reverse-proxy
  type: LoadBalancer
